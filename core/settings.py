"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

env = os.environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# It will automatically change when pushing to the server
SECRET_KEY = "django-insecure-ha9-+o%u5c%721*3fntur6t2e&r46jzl*_a8bm^&99@r!(f=1r"

# It will automatically change when pushing to the server
DEBUG = True

ALLOWED_HOSTS = []

LOGIN_URL = "accounts:login"

# Application definition

INSTALLED_APPS = [
    "accounts",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "captcha",
    "jalali_date",
    "verify_email.apps.VerifyEmailConfig",

    "home",
    "books",
    "dashboard",
    "translators",
    "django_cleanup.apps.CleanupConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "data" / "db.sqlite3",
    }
}

AUTH_USER_MODEL = "accounts.User"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Tehran"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = (
    BASE_DIR / 'home/static',
    BASE_DIR / 'accounts/static',
    BASE_DIR / 'books/static',
    BASE_DIR / 'dashboard/static',
)

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Email Configuration
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

if "EMAIL_HOST" in env:
    EMAIL_HOST = env["EMAIL_HOST"]

EMAIL_PORT = 587

if "EMAIL_HOST_USER" in env:
    EMAIL_HOST_USER = env["EMAIL_HOST_USER"]

if "EMAIL_HOST_PASSWORD" in env:
    EMAIL_HOST_PASSWORD = env["EMAIL_HOST_PASSWORD"]

if "EMAIL_USE_TLS" in env:
    EMAIL_USE_TLS = env["EMAIL_USE_TLS"].lower() in ('true', '1')

if "DEFAULT_FROM_EMAIL" in env:
    DEFAULT_FROM_EMAIL = env["DEFAULT_FROM_EMAIL"]

# Verify Email Configuration
HTML_MESSAGE_TEMPLATE = "accounts/email/verification_message_template.html"
VERIFICATION_SUCCESS_TEMPLATE = "accounts/email/verification_successful.html"
VERIFICATION_FAILED_TEMPLATE = "accounts/email/verification_failed.html"
LINK_EXPIRED_TEMPLATE = "accounts/email/verification_link_expired.html"
SUBJECT = "ترازاد | تایید ایمیل"

# Google Recaptcha Configuration
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']
if "RECAPTCHA_PUBLIC_KEY" in env:
    RECAPTCHA_PUBLIC_KEY = env["RECAPTCHA_PUBLIC_KEY"]

if "RECAPTCHA_PRIVATE_KEY" in env:
    RECAPTCHA_PRIVATE_KEY = env["RECAPTCHA_PRIVATE_KEY"]
